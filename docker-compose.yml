# =============================================================================
# Laravel Multi-Container Docker Compose Configuration
# devcontainerベースの汎用構成（ローカル開発・AWS検証対応）
# =============================================================================

services:
    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
            target: ${DOCKER_TARGET:-local}
        ports:
            - "${APP_PORT:-80}:80"
        depends_on:
            php-fpm:
                condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "nc -zv localhost 80 || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - ./public:/app/public:ro
        environment:
            PHP_FPM_HOST: "php-fpm"
            ENVIRONMENT: ${ENVIRONMENT:-local}
        networks:
            - app-network

    php-fpm:
        build:
            context: .
            dockerfile: ./docker/php-fpm/Dockerfile
            target: ${DOCKER_TARGET:-local}
        volumes:
            - .:/app
            - ./storage:/app/storage
        depends_on:
            postgres:
                condition: service_healthy
        healthcheck:
            test: ["CMD-SHELL", "nc -zv localhost 9000 || exit 1"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s
        environment:
            # Laravel Configuration
            APP_NAME: "${APP_NAME:-adminlte-laravel}"
            APP_ENV: "${APP_ENV:-local}"
            APP_KEY: "${APP_KEY:-base64:ZtTVwmCnumCzklw4zOOwQa0wvV5cc4ScVc7+ZtRCvRE=}"
            APP_DEBUG: "${APP_DEBUG:-true}"
            APP_URL: "${APP_URL:-http://localhost}"

            # Database Configuration
            DB_CONNECTION: "${DB_CONNECTION:-pgsql}"
            DB_HOST: "${DB_HOST:-postgres}"
            DB_PORT: "${DB_PORT:-5432}"
            DB_DATABASE: "${DB_DATABASE:-laravel}"
            DB_USERNAME: "${DB_USERNAME:-admin}"
            DB_PASSWORD: "${DB_PASSWORD:-teriyaki}"

            # Laravel Optimization
            LOG_CHANNEL: "${LOG_CHANNEL:-daily}"
            SESSION_DRIVER: "${SESSION_DRIVER:-cookie}"
            CACHE_DRIVER: "${CACHE_DRIVER:-array}"

            # Path Configuration (Container Optimized)
            VIEW_COMPILED_PATH: "/tmp/laravel/storage/framework/views"
            APP_SERVICES_CACHE: "/tmp/laravel/bootstrap/cache/services.php"
            APP_PACKAGES_CACHE: "/tmp/laravel/bootstrap/cache/packages.php"
            APP_CONFIG_CACHE: "/tmp/laravel/bootstrap/cache/config.php"
            APP_ROUTES_CACHE: "/tmp/laravel/bootstrap/cache/routes-v7.php"
            APP_EVENTS_CACHE: "/tmp/laravel/bootstrap/cache/events.php"

            # AWS Environment Variables (for compatibility)
            AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-ap-northeast-1}"
            AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID:-}"
            AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY:-}"
        networks:
            - app-network

    postgres:
        build:
            context: .
            dockerfile: ./docker/postgres/Dockerfile
        environment:
            TZ: "Asia/Tokyo"
            POSTGRES_DB: "${DB_DATABASE:-laravel}"
            POSTGRES_USER: "${DB_USERNAME:-admin}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-teriyaki}"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - ./docker/postgres/etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
        ports:
            - "${DB_PORT_EXTERNAL:-5432}:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-admin} -d ${DB_DATABASE:-laravel}"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - app-network

    adminer:
        image: adminer:latest
        depends_on:
            postgres:
                condition: service_healthy
        ports:
            - "${ADMINER_PORT:-8080}:8080"
        environment:
            ADMINER_DEFAULT_SERVER: postgres
            ADMINER_DESIGN: pepa-linha
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
        name: ${PROJECT_NAME:-adminlte-laravel}-network

volumes:
    postgres-data:
        driver: local
        name: ${PROJECT_NAME:-adminlte-laravel}-postgres-data
